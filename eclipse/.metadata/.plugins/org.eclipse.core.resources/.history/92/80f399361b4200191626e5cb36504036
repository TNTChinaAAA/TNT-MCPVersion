package Mixin.mixins;

import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Shadow;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraftforge.common.capabilities.ICapabilitySerializable;
import net.tntchina.client.module.ModuleManager;
import net.tntchina.client.module.modules.exploit.ItemUnbreakable;

@Mixin(ItemStack.class)
public abstract class MixinItemStack implements ICapabilitySerializable<NBTTagCompound> {

	@Shadow
	private NBTTagCompound stackTagCompound;

	@Inject(method = "isItemStackDamageable", at = @At("HEAD"), cancellable = true)
	public void NoItemDamageable(CallbackInfoReturnable<Boolean> callbackInfoReturnable) {
		if (ModuleManager.getModuleState(ItemUnbreakable.class)) {
			callbackInfoReturnable.setReturnValue(Boolean.valueOf(false));
		}
	}

	@Inject(method = "readFromNBT(Lnet/minecraft/nbt/NBTTagCompound;)V", at = @At("HEAD"))
	public void onItemUnbreakable(NBTTagCompound nbt, CallbackInfo callbackInfo) {
		if (ModuleManager.getModuleState(ItemUnbreakable.class)) {
			nbt.setBoolean("Unbreakable", true);
		}
	}

	@Shadow
	public abstract void setTagCompound(NBTTagCompound nbt);
}